Problem Description-

Given an integer n, return true if it is possible to represent n as the sum of distinct powers of three. Otherwise, return false.
 
An integer y is a power of three if there exists an integer x such that y == 3x.

 

Example 1:

Input: n = 12
Output: true
Explanation: 12 = 31 + 32

Example 2:

Input: n = 91
Output: true
Explanation: 91 = 30 + 32 + 34

Example 3:

Input: n = 21
Output: false

 

Constraints:

    1 <= n <= 107


Solution Code-

class Solution {
    static int lis(int arr[]) {
        // code here
        int n=arr.length;
        int ans=1;
        int[] dp=new int[n];
        Arrays.fill(dp, 1);
        for(int i=0;i<n-1;i++){
            for(int j=i+1;j<n;j++){
                if(arr[j]>arr[i]){
                    dp[j]=Math.max(1+dp[i], dp[j]);
                    ans=Math.max(ans, dp[j]);
                }
            }
        }
        return ans;
    }
}

T.C. O(n2)
S.C. O(n)
